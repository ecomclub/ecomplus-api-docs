## Group Categories

`.categories`

Use the **categories** resource to create, read, update and delete categories (taxonomy) in
a merchant's store, you can edit all category properties and also work with all
category subresources directly at this resource

### Category Object [/categories/schema.json]

+ Attributes (object)
    + `name` (string, required) - Category full name - Max length: **255**
    + `i18n` (object) - Category name translations - Min properties: **1** - Max properties: **10**
        + `^[a-z]{2}(_[a-z]{2})?$` (string) - Translated full category name - Max length: **255**
    + `subtitle` (string) - Optional subtitle intended to be used for SEO or layout purposes - Max length: **255**
    + `slug` (string) - Slug to complete page URL, starting with number or lowercase letter - Max length: **255** - RegEx pattern: **`^[a-z0-9]([a-z0-9-_./]+)?$`**
    + `permalink` (string) - Permanent URL to category page - Max length: **255** - Format: **uri**
    + `mobile_link` (string) - Optional URL specific to mobile devices - Max length: **255** - Format: **uri**
    + `short_description` (string) - Short category description in plain text - Max length: **255**
    + `body_html` (string) - Full category description, may use HTML tags - Max length: **250000**
    + `body_text` (string) - Full category description, plain text only - Max length: **250000**
    + `meta_title` (string) - Title tag for page SEO - Max length: **255**
    + `meta_description` (string) - Meta description tag for page SEO - Max length: **1000**
    + `parent` (object) - Category parent (above) of this category
        + `_id` (string) - Category ID - RegEx pattern: **`^[a-f0-9]{24}$`**
        + `name` (string, required) - Category name - Max length: **255**
        + `slug` (string) - Category page slug - Max length: **255** - RegEx pattern: **`^[a-z0-9]([a-z0-9-_./]+)?$`**
    + `childs` (array) - List of categories daughters of this category - Max elements: **200**
        + (object) - Child category
            + `_id` (string) - Category ID - RegEx pattern: **`^[a-f0-9]{24}$`**
            + `name` (string, required) - Category name - Max length: **255**
            + `slug` (string) - Category page slug - Max length: **255** - RegEx pattern: **`^[a-z0-9]([a-z0-9-_./]+)?$`**
    + `grids` (object) - Grids for results filtering and products composition, `grid_id` as property name - Min properties: **1** - Max properties: **200**
        + `^[a-z0-9_]{2,30}$` (object) - Grid properties
            + `_id` (string) - Grid object ID - RegEx pattern: **`^[a-f0-9]{24}$`**
            + `title` (string, required) - Grid title - Max length: **70**
            + `is_filter`: false (boolean) - Grid used to results filtering (search aggregations)
    + `icon` (object) - Category icon image
        + `url` (string, required) - Image link - Max length: **255** - Format: **uri**
        + `size` (string) - Image size (width x height) in px, such as 100x50 (100px width, 50px height) - Max length: **11** - RegEx pattern: **`^[1-9]([0-9]+)?x[1-9]([0-9]+)?$`**
        + `alt` (string) - Alternative text, HTML alt tag (important for SEO) - Max length: **255**
    + `pictures` (array) - List of category images - Max elements: **50**
        + (object) - Image object
            + `_id` (string, required) - Unique ID (ObjectID) - RegEx pattern: **`^[a-f0-9]{24}$`**
            + `tag` (string) - Tag to identify object, use only lowercase letters, digits and underscore - Max length: **20** - RegEx pattern: **`^[a-z0-9_]+$`**
            + `url` (string, required) - Image link - Max length: **255** - Format: **uri**
            + `size` (string) - Image size (width x height) in px, such as 100x50 (100px width, 50px height) - Max length: **11** - RegEx pattern: **`^[1-9]([0-9]+)?x[1-9]([0-9]+)?$`**
            + `alt` (string) - Alternative text, HTML alt tag (important for SEO) - Max length: **255**
    + `ml_category_id` (string) - Mercado Libre Taxonomy: https://api.mercadolibre.com/sites/MLB/categories - RegEx pattern: **`^ML[A-Z][0-9]{2,9}$`**
    + `google_product_category_id` (number) - Google Taxonomy: https://www.google.com/basepages/producttype/taxonomy-with-ids.pt-BR.txt - Mininum: **1** - Maximum: **999999999999**
    + `metafields` (array) - List of custom attributes - Max elements: **100**
        + (object) - Custom attribute object
            + `_id` (string, required) - Unique ID (ObjectID) - RegEx pattern: **`^[a-f0-9]{24}$`**
            + `namespace` (string) - String to help distinguish who (or which app) created and can use the metafield - Max length: **30**
            + `field` (string) - Field name - Max length: **50**
            + `value` (string, required) - Custom property value - Max length: **255**
    + `flags` (array) - Flags to associate additional info - Max elements: **10**
        + (string) - Flag title
    + `notes` (string) - Optional notes with additional info about this category - Max length: **255**

#### JSON Schema [GET]

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100

+ Response 200 (application/json; charset=utf-8)

    + Body

            {
                "$schema": "http://json-schema.org/draft-06/schema#",
                "title": "Categories",
                "description": "Category object model",
                "type": "object",
                "required": [
                    "name"
                ],
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Category full name"
                    },
                    "i18n": {
                        "type": "object",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 10,
                        "patternProperties": {
                            "^[a-z]{2}(_[a-z]{2})?$": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Translated full category name"
                            }
                        },
                        "description": "Category name translations"
                    },
                    "subtitle": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Optional subtitle intended to be used for SEO or layout purposes"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^[a-z0-9]([a-z0-9-_./]+)?$",
                        "description": "Slug to complete page URL, starting with number or lowercase letter"
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "uri",
                        "description": "Permanent URL to category page"
                    },
                    "mobile_link": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "uri",
                        "description": "Optional URL specific to mobile devices"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Short category description in plain text"
                    },
                    "body_html": {
                        "type": "string",
                        "maxLength": 250000,
                        "description": "Full category description, may use HTML tags"
                    },
                    "body_text": {
                        "type": "string",
                        "maxLength": 250000,
                        "description": "Full category description, plain text only"
                    },
                    "meta_title": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Title tag for page SEO"
                    },
                    "meta_description": {
                        "type": "string",
                        "maxLength": 1000,
                        "description": "Meta description tag for page SEO"
                    },
                    "parent": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "_id": {
                                "type": "string",
                                "pattern": "^[a-f0-9]{24}$",
                                "description": "Category ID"
                            },
                            "name": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Category name"
                            },
                            "slug": {
                                "type": "string",
                                "maxLength": 255,
                                "pattern": "^[a-z0-9]([a-z0-9-_./]+)?$",
                                "description": "Category page slug"
                            }
                        },
                        "description": "Category parent (above) of this category"
                    },
                    "childs": {
                        "type": "array",
                        "maxItems": 200,
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "name"
                            ],
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "pattern": "^[a-f0-9]{24}$",
                                    "description": "Category ID"
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Category name"
                                },
                                "slug": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "pattern": "^[a-z0-9]([a-z0-9-_./]+)?$",
                                    "description": "Category page slug"
                                }
                            },
                            "description": "Child category"
                        },
                        "description": "List of categories daughters of this category"
                    },
                    "grids": {
                        "type": "object",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 200,
                        "patternProperties": {
                            "^[a-z0-9_]{2,30}$": {
                                "type": "object",
                                "required": [
                                    "title"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "pattern": "^[a-f0-9]{24}$",
                                        "description": "Grid object ID"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 70,
                                        "description": "Grid title"
                                    },
                                    "is_filter": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Grid used to results filtering (search aggregations)"
                                    }
                                },
                                "description": "Grid properties"
                            }
                        },
                        "description": "Grids for results filtering and products composition, grid_id as property name"
                    },
                    "icon": {
                        "type": "object",
                        "required": [
                            "url"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "url": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "uri",
                                "description": "Image link"
                            },
                            "size": {
                                "type": "string",
                                "maxLength": 11,
                                "pattern": "^[1-9]([0-9]+)?x[1-9]([0-9]+)?$",
                                "description": "Image size (width x height) in px, such as 100x50 (100px width, 50px height)"
                            },
                            "alt": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Alternative text, HTML alt tag (important for SEO)"
                            }
                        },
                        "description": "Category icon image"
                    },
                    "pictures": {
                        "type": "array",
                        "maxItems": 50,
                        "items": {
                            "type": "object",
                            "required": [
                                "_id",
                                "url"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "pattern": "^[a-f0-9]{24}$",
                                    "description": "Unique ID (ObjectID)"
                                },
                                "tag": {
                                    "type": "string",
                                    "maxLength": 20,
                                    "pattern": "^[a-z0-9_]+$",
                                    "description": "Tag to identify object, use only lowercase letters, digits and underscore"
                                },
                                "url": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "format": "uri",
                                    "description": "Image link"
                                },
                                "size": {
                                    "type": "string",
                                    "maxLength": 11,
                                    "pattern": "^[1-9]([0-9]+)?x[1-9]([0-9]+)?$",
                                    "description": "Image size (width x height) in px, such as 100x50 (100px width, 50px height)"
                                },
                                "alt": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Alternative text, HTML alt tag (important for SEO)"
                                }
                            },
                            "description": "Image object"
                        },
                        "description": "List of category images"
                    },
                    "ml_category_id": {
                        "type": "string",
                        "pattern": "^ML[A-Z][0-9]{2,9}$",
                        "description": "Mercado Libre Taxonomy: https://api.mercadolibre.com/sites/MLB/categories"
                    },
                    "google_product_category_id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999999999,
                        "description": "Google Taxonomy: https://www.google.com/basepages/producttype/taxonomy-with-ids.pt-BR.txt"
                    },
                    "metafields": {
                        "type": "array",
                        "maxItems": 100,
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "_id",
                                "value"
                            ],
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "pattern": "^[a-f0-9]{24}$",
                                    "description": "Unique ID (ObjectID)"
                                },
                                "namespace": {
                                    "type": "string",
                                    "maxLength": 30,
                                    "description": "String to help distinguish who (or which app) created and can use the metafield"
                                },
                                "field": {
                                    "type": "string",
                                    "maxLength": 50,
                                    "description": "Field name"
                                },
                                "value": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Custom property value"
                                }
                            },
                            "description": "Custom attribute object"
                        },
                        "description": "List of custom attributes"
                    },
                    "flags": {
                        "type": "array",
                        "uniqueItems": true,
                        "maxItems": 10,
                        "items": {
                            "type": "string",
                            "maxLength": 20,
                            "description": "Flag title"
                        },
                        "description": "Flags to associate additional info"
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Optional notes with additional info about this category"
                    }
                }
            }

### All Categories [/categories.json{?limit,offset,sort,fields}]

*/categories.json?limit&offset&sort&fields&[field]*

> Authentication<br>_GET_: **none**

Use [default URL parameters](#introduction/overview/url-params) (metadata)
for pagination and ordering, you can use any other parameter to query
by particular object properties

#### List All Store Categories [GET /categories.json]

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100

+ Response 200 (application/json; charset=utf-8)

    + Body

            {
              "meta": {
                "limit": 1000,
                "offset": 0,
                "sort": [],
                "fields": [
                  "_id",
                  "name",
                  "slug"
                ],
                "query": {}
              },
              "result": [
                {
                  "_id": "b10000000000000000001110",
                  "name": "Category 0",
                  "slug": "category-zero"
                },
                {
                  "_id": "b10000000000000000001111",
                  "name": "Category 1",
                  "slug": "category-one"
                },
                {
                  "_id": "b10000000000000000001112",
                  "name": "Category 2",
                  "slug": "category-two"
                },
                {
                  "_id": "b10000000000000000001113",
                  "name": "Category 3",
                  "slug": "category-three"
                },
                {
                  "_id": "b10000000000000000001114",
                  "name": "Category 4",
                  "slug": "category-four"
                },
                {
                  "_id": "b10000000000000000001115",
                  "name": "Category 5",
                  "slug": "category-five"
                },
                {
                  "_id": "b10000000000000000001116",
                  "name": "Category 6",
                  "slug": "category-six"
                },
                {
                  "_id": "f10000000000000000000001",
                  "name": "Polo Shirts",
                  "slug": "polo"
                }
              ]
            }

#### Pagination And Ordering [GET]

+ Parameters
    + limit: 4 (number, optional) - Max number of objects to return
    + offset: 2 (number, optional) - First entry to return
    + sort: `-name` (string, optional) - Rules to order resultant objects
    + fields: `name,short_description` (string, optional) - Object properties to return

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100

+ Response 200 (application/json; charset=utf-8)

    + Body

            {
              "meta": {
                "limit": 4,
                "offset": 2,
                "sort": [
                  {
                    "field": "name",
                    "order": -1
                  }
                ],
                "fields": [
                  "name",
                  "short_description"
                ],
                "query": {}
              },
              "result": [
                {
                  "_id": "b10000000000000000001115",
                  "name": "Category 5",
                  "short_description": "Category 5 short description text"
                },
                {
                  "_id": "b10000000000000000001114",
                  "name": "Category 4",
                  "short_description": "Category 4 short description text"
                },
                {
                  "_id": "b10000000000000000001113",
                  "name": "Category 3",
                  "short_description": "Category 3 short description text"
                },
                {
                  "_id": "b10000000000000000001112",
                  "name": "Category 2",
                  "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                }
              ]
            }

#### Find Categories [GET /categories.json{?slug}]

+ Parameters
    + `slug`: `category-four` (string, optional) - Object property to query

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100

+ Response 200 (application/json; charset=utf-8)

    + Body

            {
              "meta": {
                "limit": 1000,
                "offset": 0,
                "sort": [],
                "fields": [
                  "_id",
                  "name",
                  "slug"
                ],
                "query": {
                  "slug": "category-four"
                }
              },
              "result": [
                {
                  "_id": "b10000000000000000001114",
                  "name": "Category 4",
                  "slug": "category-four"
                }
              ]
            }

### New Category [/categories.json]

*/categories.json*

> Authentication<br>_POST_: **required**

Request body must obey the specifications of
[this model](#reference/categories/category-object)

#### Create New Category [POST]

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

    + Body

            {
              "name": "Polo Shirts",
              "slug": "polo",
              "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
              "body_html": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>",
              "body_text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
              "meta_title": "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat",
              "meta_description": "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
              "parent": {
                "_id": "b10000000000000000001110",
                "name": "Category 0",
                "slug": "category-zero"
              },
              "childs": [
                {
                  "_id": "b10000000000000000001112",
                  "name": "Category 2",
                  "slug": "category-two"
                },
                {
                  "_id": "b10000000000000000001113",
                  "name": "Category 3",
                  "slug": "category-three"
                }
              ],
              "grids": {
                "gender": {
                  "_id": "b90000000000000000000101",
                  "title": "Gender"
                },
                "size": {
                  "_id": "b90000000000000000000102",
                  "title": "Shirt size",
                  "is_filter": true
                },
                "colors": {
                  "_id": "b90000000000000000000103",
                  "title": "Colors",
                  "is_filter": true
                }
              },
              "icon": {
                "url": "https://mycdn.com/icon/polo-example.png",
                "size": "30x20"
              },
              "pictures": [
                {
                  "_id": "b74000000000000000000103",
                  "tag": "banner",
                  "url": "https://mycdn.com/polo-example-banner.jpg",
                  "size": "900x200",
                  "alt": "Trending Polo Shirts"
                }
              ]
            }

+ Response 201 (application/json; charset=utf-8)

    + Body

            {
              "_id": "f10000000000000000000001"
            }

### Specific Category [/categories/{_id}.json]

*/categories/[_id].json*

> Authentication<br>_GET_: **none**<br>_PATCH_, _PUT_, _DELETE_: **required**

In read requests, response body will follow
[this model](#reference/categories/category-object)

For overwriting and editing, request body must obey the same specifications,
but especially for edit requests there are no required fields

#### Read Category [GET]

+ Parameters
    + _id: f10000000000000000000001 (string, required) - The category ID

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100

+ Response 200 (application/json; charset=utf-8)

    + Body

            {
              "_id": "f10000000000000000000001",
              "created_at": "2017-11-19T13:10:00Z",
              "store_id": 100,
              "name": "Polo Shirts",
              "slug": "polo",
              "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
              "body_html": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>",
              "body_text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
              "meta_title": "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat",
              "meta_description": "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
              "parent": {
                "_id": "b10000000000000000001110",
                "name": "Category 0",
                "slug": "category-zero"
              },
              "childs": [
                {
                  "_id": "b10000000000000000001112",
                  "name": "Category 2",
                  "slug": "category-two"
                },
                {
                  "_id": "b10000000000000000001113",
                  "name": "Category 3",
                  "slug": "category-three"
                }
              ],
              "grids": {
                "gender": {
                  "_id": "b90000000000000000000101",
                  "title": "Gender",
                  "is_filter": false
                },
                "size": {
                  "_id": "b90000000000000000000102",
                  "title": "Shirt size",
                  "is_filter": true
                },
                "colors": {
                  "_id": "b90000000000000000000103",
                  "title": "Colors",
                  "is_filter": true
                }
              },
              "icon": {
                "url": "https://mycdn.com/icon/polo-example.png",
                "size": "30x20"
              },
              "pictures": [
                {
                  "_id": "b74000000000000000000103",
                  "tag": "banner",
                  "url": "https://mycdn.com/polo-example-banner.jpg",
                  "size": "900x200",
                  "alt": "Trending Polo Shirts"
                }
              ]
            }

#### Edit Category [PATCH]

+ Parameters
    + _id: f10000000000000000000001 (string, required) - The category ID

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

    + Body

            {
              "name": "Polo Shirts Sample",
              "permalink": "https://myshop.sample/polo-shirts/"
            }

+ Response 204

#### Overwrite Category [PUT]

+ Parameters
    + _id: f10000000000000000000001 (string, required) - The category ID

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

    + Body

            {
              "name": "Polo Shirts Sample",
              "slug": "polo",
              "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
              "body_html": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>",
              "body_text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
              "parent": {
                "_id": "b10000000000000000001110",
                "name": "Category 0",
                "slug": "category-zero"
              },
              "childs": [
                {
                  "_id": "b10000000000000000001112",
                  "name": "Category 2",
                  "slug": "category-two"
                }
              ],
              "grids": {
                "size": {
                  "_id": "b90000000000000000000102",
                  "title": "Shirt size",
                  "is_filter": true
                },
                "colors": {
                  "_id": "b90000000000000000000103",
                  "title": "Colors",
                  "is_filter": true
                }
              },
              "icon": {
                "url": "https://mycdn.com/icon/polo-example.png",
                "size": "30x20"
              },
              "pictures": [
                {
                  "_id": "b74000000000000000000103",
                  "tag": "banner",
                  "url": "https://mycdn.com/polo-example-banner.jpg",
                  "size": "900x200",
                  "alt": "Trending Polo Shirts"
                }
              ]
            }

+ Response 204

#### Remove Category [DELETE]

+ Parameters
    + _id: f10000000000000000000001 (string, required) - The category ID

+ Request (application/json; charset=utf-8)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

+ Response 204
