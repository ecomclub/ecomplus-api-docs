## Group Product Categories

`.products.categories`

Use **categories** subresource (of *products* resource) to
create, read and delete categories of a specific product by ID,
to add categories to product from this subresource
you must specify only the ID of an existent category, other category properties will be syncronized from
*categories* resource

### Product Category Object [/products/schema/categories.json]

+ Attributes (object)
    + `_id` (string, required) - Category ID - RegEx pattern: **`^[a-f0-9]{24}$`**
    + `name` (string, required) - Category name - Max length: **255**
    + `slug` (string) - Category page slug - Max length: **255** - RegEx pattern: **`^[a-z0-9]([a-z0-9-_./]+)?$`**
    + `ml_category_id` (string) - ID in Mercado Libre Taxonomy - RegEx pattern: **`^ML[A-Z][0-9]{2,9}$`**
    + `google_product_category_id` (number) - ID in Google Taxonomy - Mininum: **1** - Maximum: **999999999999**

#### JSON Schema [GET]

+ Request (application/json)

    + Headers

            X-Store-ID: 100

+ Response 200 (application/json)

    + Body

            {
                "$schema": "http://json-schema.org/draft-06/schema#",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "_id"
                ],
                "properties": {
                    "_id": {
                        "type": "string",
                        "pattern": "^[a-f0-9]{24}$",
                        "description": "Category ID"
                    }
                },
                "title": "Add category by ID to product"
            }

### All Categories of a Product [/products/{product}/categories.json{?limit,offset,sort,fields}]

*/products/[_id]/categories.json?limit&offset&sort&fields&[field]*

> Authentication<br>_GET_: **required**

Use [default URL parameters](#introduction/overview/url-params) (metadata)
for pagination and ordering, you can use any other parameter to query
by particular object properties

#### List All Product Categories [GET /products/{product}/categories.json]

+ Parameters
    + product: 1234567890abcdef01291511 (string, required) - Product ID

+ Request (application/json)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

+ Response 200 (application/json)

    + Body

            {
              "meta": {
                "limit": 1000,
                "offset": 0,
                "sort": [],
                "fields": [],
                "query": {}
              },
              "result": [
                {
                  "_id": "b10000000000000000001110",
                  "name": "Category 0",
                  "slug": "category-zero"
                },
                {
                  "_id": "b10000000000000000001116",
                  "name": "Category 6",
                  "slug": "category-six"
                },
                {
                  "_id": "f10000000000000000000001",
                  "name": "Polo Shirts",
                  "slug": "polo"
                }
              ]
            }

### New Category to a Product [/products/{product}/categories.json]

*/products/[_id]/categories.json*

> Authentication<br>_POST_: **required**

Request body must be an object with valid category `_id` and no more properties

#### Add New Product Category [POST]

+ Parameters
    + product: 1234567890abcdef01291511 (string, required) - Product ID

+ Request (application/json)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

    + Schema

            {
                "$schema": "http://json-schema.org/draft-06/schema#",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "_id"
                ],
                "properties": {
                    "_id": {
                        "type": "string",
                        "pattern": "^[a-f0-9]{24}$",
                        "description": "Category ID"
                    }
                },
                "title": "Add category by ID to product"
            }

    + Body

            {
              "_id": "b10000000000000000001112"
            }

+ Response 201 (application/json)

    + Body

            {
              "_id": "b10000000000000000001112"
            }

### Specific Category of a Product [/products/{product}/categories/{_id}.json]

*/products/[_id]/brands/[_id].json*

> Authentication<br>_GET_, _DELETE_: **required**

In read requests, response body will follow
[this model](#reference/product-categories/product-category-object)

#### Read Product Category [GET]

+ Parameters
    + product: 1234567890abcdef01291511 (string, required) - Product ID
    + _id: f10000000000000000000001 (string, required) - Category ID

+ Request (application/json)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

+ Response 200 (application/json)

    + Body

            {
              "_id": "f10000000000000000000001",
              "name": "Polo Shirts",
              "slug": "polo"
            }

#### Remove Category From Product [DELETE]

+ Parameters
    + product: 1234567890abcdef01291511 (string, required) - Product ID
    + _id: f10000000000000000000001 (string, required) - Category ID

+ Request (application/json)

    + Headers

            X-Store-ID: 100
            X-Access-Token: eyJhbGciOi.eyJzdWIi.AFONFh7HgQ
            X-My-ID: 5a6757722b66f68dbed44526

+ Response 204
